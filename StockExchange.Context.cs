//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace YahooFinanceImport
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StockExchangeEntities : DbContext
    {
        public StockExchangeEntities()
            : base("name=StockExchangeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Stock> Stocks { get; set; }
        public virtual DbSet<StockPrice> StockPrices { get; set; }
        public virtual DbSet<Indicator> Indicators { get; set; }
    
        public virtual int pr_CalculateEMA(string isinCode, Nullable<short> startPeriod, Nullable<short> endPeriod)
        {
            var isinCodeParameter = isinCode != null ?
                new ObjectParameter("isinCode", isinCode) :
                new ObjectParameter("isinCode", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("startPeriod", startPeriod) :
                new ObjectParameter("startPeriod", typeof(short));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("endPeriod", endPeriod) :
                new ObjectParameter("endPeriod", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_CalculateEMA", isinCodeParameter, startPeriodParameter, endPeriodParameter);
        }
    
        public virtual int pr_CalculateRSI(string isinCode, Nullable<short> startPeriod, Nullable<short> endPeriod)
        {
            var isinCodeParameter = isinCode != null ?
                new ObjectParameter("isinCode", isinCode) :
                new ObjectParameter("isinCode", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("startPeriod", startPeriod) :
                new ObjectParameter("startPeriod", typeof(short));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("endPeriod", endPeriod) :
                new ObjectParameter("endPeriod", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_CalculateRSI", isinCodeParameter, startPeriodParameter, endPeriodParameter);
        }
    
        public virtual int CalculateSMA(Nullable<short> stockId, Nullable<short> startPeriod, Nullable<short> endPeriod)
        {
            var stockIdParameter = stockId.HasValue ?
                new ObjectParameter("stockId", stockId) :
                new ObjectParameter("stockId", typeof(short));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("startPeriod", startPeriod) :
                new ObjectParameter("startPeriod", typeof(short));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("endPeriod", endPeriod) :
                new ObjectParameter("endPeriod", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculateSMA", stockIdParameter, startPeriodParameter, endPeriodParameter);
        }
    
        public virtual int pr_CalculateVMA(string isinCode, Nullable<short> startPeriod, Nullable<short> endPeriod)
        {
            var isinCodeParameter = isinCode != null ?
                new ObjectParameter("isinCode", isinCode) :
                new ObjectParameter("isinCode", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("startPeriod", startPeriod) :
                new ObjectParameter("startPeriod", typeof(short));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("endPeriod", endPeriod) :
                new ObjectParameter("endPeriod", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_CalculateVMA", isinCodeParameter, startPeriodParameter, endPeriodParameter);
        }
    
        public virtual int pr_CalculateXPBuy(string isinCode, Nullable<short> startPeriod, Nullable<short> endPeriod)
        {
            var isinCodeParameter = isinCode != null ?
                new ObjectParameter("isinCode", isinCode) :
                new ObjectParameter("isinCode", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("startPeriod", startPeriod) :
                new ObjectParameter("startPeriod", typeof(short));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("endPeriod", endPeriod) :
                new ObjectParameter("endPeriod", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_CalculateXPBuy", isinCodeParameter, startPeriodParameter, endPeriodParameter);
        }
    
        public virtual int pr_CalculateXPSell(string isinCode, Nullable<short> startPeriod, Nullable<short> endPeriod)
        {
            var isinCodeParameter = isinCode != null ?
                new ObjectParameter("isinCode", isinCode) :
                new ObjectParameter("isinCode", typeof(string));
    
            var startPeriodParameter = startPeriod.HasValue ?
                new ObjectParameter("startPeriod", startPeriod) :
                new ObjectParameter("startPeriod", typeof(short));
    
            var endPeriodParameter = endPeriod.HasValue ?
                new ObjectParameter("endPeriod", endPeriod) :
                new ObjectParameter("endPeriod", typeof(short));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("pr_CalculateXPSell", isinCodeParameter, startPeriodParameter, endPeriodParameter);
        }
    
        public virtual int CreateStockPrice(string isinCode, Nullable<System.DateTime> priceDate, Nullable<decimal> priceOpen, Nullable<decimal> priceHigh, Nullable<decimal> priceLow, Nullable<decimal> priceClose, Nullable<decimal> priceVolume, Nullable<decimal> priceAdjClose)
        {
            var isinCodeParameter = isinCode != null ?
                new ObjectParameter("isinCode", isinCode) :
                new ObjectParameter("isinCode", typeof(string));
    
            var priceDateParameter = priceDate.HasValue ?
                new ObjectParameter("priceDate", priceDate) :
                new ObjectParameter("priceDate", typeof(System.DateTime));
    
            var priceOpenParameter = priceOpen.HasValue ?
                new ObjectParameter("priceOpen", priceOpen) :
                new ObjectParameter("priceOpen", typeof(decimal));
    
            var priceHighParameter = priceHigh.HasValue ?
                new ObjectParameter("priceHigh", priceHigh) :
                new ObjectParameter("priceHigh", typeof(decimal));
    
            var priceLowParameter = priceLow.HasValue ?
                new ObjectParameter("priceLow", priceLow) :
                new ObjectParameter("priceLow", typeof(decimal));
    
            var priceCloseParameter = priceClose.HasValue ?
                new ObjectParameter("priceClose", priceClose) :
                new ObjectParameter("priceClose", typeof(decimal));
    
            var priceVolumeParameter = priceVolume.HasValue ?
                new ObjectParameter("priceVolume", priceVolume) :
                new ObjectParameter("priceVolume", typeof(decimal));
    
            var priceAdjCloseParameter = priceAdjClose.HasValue ?
                new ObjectParameter("priceAdjClose", priceAdjClose) :
                new ObjectParameter("priceAdjClose", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CreateStockPrice", isinCodeParameter, priceDateParameter, priceOpenParameter, priceHighParameter, priceLowParameter, priceCloseParameter, priceVolumeParameter, priceAdjCloseParameter);
        }
    }
}
